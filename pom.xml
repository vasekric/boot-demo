<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.tieto.vasekric</groupId>
	<artifactId>boot</artifactId>
	<version>0.0.1</version>
	<packaging>${packagingType}</packaging>
	<name>boot</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<activeProfile>dev</activeProfile>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<packagingType>jar</packagingType> <!-- Default, rewrote by profiles -->
		<serverUrl>http://localhost</serverUrl>
		<serverPort>8080</serverPort>
	</properties>
	<organization>
		<!-- Just workaround for spring boot -->
		<name>${activeProfile}</name>
	</organization>

	<!-- Common dependencies -->
	<dependencies>
		<!-- Spring boot web starter pack -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Providing basic information endpoints, see http://localhost:8080/actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<property>
					<name>activeProfile</name>
					<value>dev</value>
				</property>
			</activation>
			<properties>
				<packagingType>jar</packagingType>
			</properties>
			<dependencies>
				<!--
					Since spring boot 1.3,
					provides hot-swap of classes and resources,
					provides live-reload, you need plugin for browser for that http://livereload.com/ and in Intellij click Make Project
					docs - https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html
				-->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- Spring boot run -->
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<property>
					<name>activeProfile</name>
					<value>test</value>
				</property>
			</activation>
			<properties>
				<packagingType>war</packagingType>
			</properties>
			<dependencies>
				<!-- For deploying as war to container -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
				 <!--Spring Boot Monitoring-->
				<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-client</artifactId>
				<version>1.3.2</version>
				</dependency>
				 <!--Logs Monitoring-->
				<dependency>
				<groupId>org.jolokia</groupId>
				<artifactId>jolokia-core</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tomcat-maven-plugin</artifactId>
						<configuration>
							<url>${serverUrl}:${serverPort}/manager/text</url>
							<path>/${name}</path>
							<update>true</update>
							<username>admin</username>
							<password>password</password>
							<warFile>${project.build.directory}/${project.build.finalName}.war</warFile>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.6</version>
						<configuration>
							<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<property>
					<name>activeProfile</name>
					<value>prod</value>
				</property>
			</activation>
			<properties>
				<packagingType>war</packagingType>
			</properties>
			<dependencies>
				<!-- For deploying as war to container -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
				<!--Spring Boot Monitoring-->
				<dependency>
					<groupId>de.codecentric</groupId>
					<artifactId>spring-boot-admin-starter-client</artifactId>
					<version>1.3.2</version>
				</dependency>
				<!--Logs Monitoring-->
				<dependency>
					<groupId>org.jolokia</groupId>
					<artifactId>jolokia-core</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tomcat-maven-plugin</artifactId>
						<configuration>
							<url>${serverUrl}:${serverPort}/manager/text</url>
							<path>/${name}</path>
							<update>true</update>
							<username>admin</username>
							<password>password</password>
							<warFile>${project.build.directory}/${project.build.finalName}.war</warFile>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.6</version>
						<configuration>
							<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<build>
        <finalName>${name}</finalName>
	</build>

</project>
